node {
    def app

	stage('Clone repository') {
        /* Let's make sure we have the repository cloned to our workspace */

        checkout scm
    }
	
	stage ('Initialize') {
	    mvnHome = tool 'Maven'
    }

	
	stage('Build project') {
        /* Let's make sure we have the repository cloned to our workspace */
		echo 'This is a pipeline'
        /* sh 'mvn clean install' */
        if (isUnix()) {
                 sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore clean package"
              } else {
                 bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean install/)
              }
    }
	
	stage('Build image') {
        /* This builds the actual image; synonymous to
         * docker build on the command line */

         app = docker.build("sample")
    }

	stage('Test image') {
        /* Ideally, we would run a test framework against our image.
         * For this example, we're using a Volkswagen-type approach ;-) */

            sh 'echo "Tests passed"'
    }

	stage('Push image') {
        /* Finally, we'll push the image with two tags:
         * First, the incremental build number from Jenkins
         * Second, the 'latest' tag.
         * Pushing multiple tags is cheap, as all the layers are reused. */
        docker.withRegistry('733387210490.dkr.ecr.us-west-2.amazonaws.com/applications', 'aws-credentials') {
            app.push("${env.BUILD_NUMBER}")
            app.push("latest")
        }
    }
}